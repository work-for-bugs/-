//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : team
//  @ File Name : UserTeamRelationServiceImpl.java
//  @ Date : 2022/7/6
//  @ Author : 
//
//

package com.tedu.teamserver.service.impl;


import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.tedu.teamserver.mapper.TeamMapper;
import com.tedu.teamserver.mapper.UserTeamRelationMapper;
import com.tedu.teamserver.pojo.Team.TeamDAO;
import com.tedu.teamserver.pojo.UserTeamRelation.UserTeamRelationDAO;
import com.tedu.teamserver.pojo.UserTeamRelation.UserTeamRelationInsertDTO;
import com.tedu.teamserver.pojo.UserTeamRelation.UserTeamRelationVO;
import com.tedu.teamserver.service.UserTeamRelationService;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class UserTeamRelationServiceImpl implements UserTeamRelationService {
    @Autowired
    UserTeamRelationMapper userTeamRelationMapper;

    @Autowired
    TeamMapper teamMapper;

    @Override
    public UserTeamRelationDAO selectById(Integer id) {
        //写sql语句,select * from user_team_relation where join_id=1
        QueryWrapper queryWrapper = new QueryWrapper();
        queryWrapper.eq("join_id", id);
        //执行sql语句
        UserTeamRelationDAO userTeamRelationDAO = userTeamRelationMapper.selectOne(queryWrapper);
        return userTeamRelationDAO;
    }

    @Override
    public List<UserTeamRelationDAO> selectByUserId(Integer id) {
        //写sql语句,select * from user_team_relation where user_id=1
        QueryWrapper queryWrapper = new QueryWrapper();
        queryWrapper.eq("user_id",id);
        //执行sql语句
        List list = userTeamRelationMapper.selectList(queryWrapper);
        return list;
    }

    @Override
    public List<UserTeamRelationVO> selectJoin(Integer id) {
        //select * from user_team_relation a, team b
        // where a.user_id=1 and a.user_id != b.user_id and a.team_id = b.team_id
        //1.查出用户参加的所有活动
        QueryWrapper queryWrapper = new QueryWrapper();
        queryWrapper.eq("user_id",id);
        List<UserTeamRelationDAO> daoList = userTeamRelationMapper.selectList(queryWrapper);

        ArrayList<UserTeamRelationVO> voList = new ArrayList<>();
        //2.遍历List<UserTeamRelationDAO>
        for(UserTeamRelationDAO userTeamRelationDAO : daoList){
            //根据team的user_id查询activity_name
            //select * from team where user_id != 1
            QueryWrapper queryWrapper1 = new QueryWrapper();
            queryWrapper1.ne("user_id", userTeamRelationDAO.getUserId());
            queryWrapper1.eq("team_id",userTeamRelationDAO.getTeamId());
            TeamDAO teamDAO = teamMapper.selectOne(queryWrapper1);
            if(teamDAO != null){
                //2.1创建userTeamRelationVO
                UserTeamRelationVO userTeamRelationVO = new UserTeamRelationVO();
                //设置VO中不在DAO的属性
                userTeamRelationVO.setTeamName(teamDAO.getActivityName());
                //把DAO中的值拷贝到VO
                BeanUtils.copyProperties(userTeamRelationDAO,userTeamRelationVO);
                //把VO放到集合
                voList.add(userTeamRelationVO);
            }
        }
        return voList;
    }

    @Override
    public List<UserTeamRelationVO> selectLaunch(Integer id) {
        //select * from user_team_relation a, team b
        // where a.user_id=1 and a.user_id = b.user_id
        //1.查出用户参加的所有活动
        QueryWrapper queryWrapper = new QueryWrapper();
        queryWrapper.eq("user_id",id);
        List<UserTeamRelationDAO> daoList = userTeamRelationMapper.selectList(queryWrapper);

        ArrayList<UserTeamRelationVO> voList = new ArrayList<>();
        //2.遍历List<UserTeamRelationDAO>
        for(UserTeamRelationDAO userTeamRelationDAO : daoList){
            //根据team的user_id查询activity_name
            //select * from team where user_id != 1
            QueryWrapper queryWrapper1 = new QueryWrapper();
            queryWrapper1.eq("user_id", userTeamRelationDAO.getUserId());
            queryWrapper1.eq("team_id",userTeamRelationDAO.getTeamId());
            TeamDAO teamDAO = teamMapper.selectOne(queryWrapper1);
            if(teamDAO != null){
                //2.1创建userTeamRelationVO
                UserTeamRelationVO userTeamRelationVO = new UserTeamRelationVO();
                //设置VO中不在DAO的属性
                userTeamRelationVO.setTeamName(teamDAO.getActivityName());
                //把DAO中的值拷贝到VO
                BeanUtils.copyProperties(userTeamRelationDAO,userTeamRelationVO);
                //把VO放到集合
                voList.add(userTeamRelationVO);
            }
        }
        return voList;
    }

    @Override
    public boolean insert(UserTeamRelationInsertDTO userTeamRelationInsertDTO) {
        UserTeamRelationDAO userTeamRelationDAO = new UserTeamRelationDAO();
        //把userTeamRelationInsertDTO的属性的值拷贝到userTeamRelationDAO中
        //要求userTeamRelationDAO的属性名和userTeamRelationInsertDTO的属性名必须一样
        BeanUtils.copyProperties(userTeamRelationInsertDTO,userTeamRelationDAO);
        int insertRow = userTeamRelationMapper.insert(userTeamRelationDAO);
        return insertRow>=1?true:false;
    }
}
